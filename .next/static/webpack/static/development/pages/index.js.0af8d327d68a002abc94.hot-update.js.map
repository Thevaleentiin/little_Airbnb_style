{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0af8d327d68a002abc94.hot-update.js","sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./pages/index.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// pages/index.js\r\nimport { Component } from 'react'\r\nimport Head from 'next/head'\r\nimport { config } from '../components/config.js'\r\nimport Layout from '../components/myLayout.js'\r\nimport AppartmentList from '../components/appartmentList.js'\r\nimport Searchbar from '../components/searchBar.js'\r\n\r\nconst fetch = require(\"node-fetch\");\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    showAll: false,\r\n    searchValue: '',\r\n    isLoading: false,\r\n    appartments: [],\r\n    favorites: [],\r\n  }\r\n  async componentWillMount() {\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n    const apiUrl = config.apiUrl\r\n    const req = await fetch(apiUrl) \r\n    const appartments = await req.json()\r\n    this.setState({\r\n      isLoading: false,\r\n      appartments \r\n    })\r\n  }\r\n  toggleShow = () => {\r\n    this.setState({\r\n      showAll: !this.state.showAll\r\n    })\r\n  }\r\n  handleInputText = e => {\r\n    this.setState({\r\n      searchValue: e.target.value\r\n    })\r\n  }\r\n  toggleFavorite = (e, id) => {\r\n    const favs = this.state.favorites\r\n    if (favs.includes(id)) {\r\n      const index = favs.indexOf(id)\r\n      favs.splice(index, 1)\r\n      this.setState({\r\n        favorites: favs\r\n      })\r\n    } else {\r\n      favs.push(id)\r\n      this.setState({\r\n        favorites: favs\r\n      })\r\n    }\r\n  }\r\n  render () {\r\n    const { showAll, searchValue, isLoading, appartments, favorites } = this.state\r\n\r\n    const filteredAppartments = appartments.filter(el => el.title.rendered.toLowerCase().includes(searchValue))\r\n    const availableAppartments = showAll ? filteredAppartments : filteredAppartments.filter(el => {\r\n      if (el.acf.available) {\r\n        return el\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    return (\r\n      <div>\r\n      <Head>\r\n      <title>Home</title>\r\n      <meta charSet='utf-8' />\r\n      <meta name='viewport' content='initial-scale=1.0, width=device-width' />\r\n      </Head>\r\n      <Layout>\r\n        Apartment List<br/>\r\n        <button onClick={this.toggleShow}>\r\n          {showAll ? 'Show only available' : 'ShowAll'}\r\n        </button><br/>\r\n        <Searchbar\r\n          searchValue={searchValue}\r\n          handleInputText={this.handleInputText}\r\n          found={availableAppartments.length}\r\n          total={appartments.length}\r\n          />\r\n        {isLoading ?\r\n          <p>Loading ...</p>\r\n          :\r\n          <AppartmentList\r\n            appartments={availableAppartments}\r\n            favorites={favorites}\r\n            toggleFav={this.toggleFavorite}\r\n          />\r\n        }\r\n      </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Index"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAkBA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;;;;AApCA;AACA;AADA;AAGA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAtFA;AACA;AAuFA;;;;A","sourceRoot":""}